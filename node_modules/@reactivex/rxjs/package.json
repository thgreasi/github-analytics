{
  "_args": [
    [
      "@reactivex/rxjs",
      "/home/teo/Dropbox/githubAnalytics/polymer-starter-kit-1.3.0"
    ]
  ],
  "_from": "@reactivex/rxjs@latest",
  "_id": "@reactivex/rxjs@5.0.0-beta.7",
  "_inCache": true,
  "_installable": true,
  "_location": "/@reactivex/rxjs",
  "_nodeVersion": "5.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/rxjs-5.0.0-beta.7.tgz_1461786631911_0.5975602958351374"
  },
  "_npmUser": {
    "email": "ben@benlesh.com",
    "name": "blesh"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "name": "@reactivex/rxjs",
    "raw": "@reactivex/rxjs",
    "rawSpec": "",
    "scope": "@reactivex",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@reactivex/rxjs/-/rxjs-5.0.0-beta.7.tgz",
  "_shasum": "c0829c55a33c0bec30abb41de385e2820bae8dd5",
  "_shrinkwrap": null,
  "_spec": "@reactivex/rxjs",
  "_where": "/home/teo/Dropbox/githubAnalytics/polymer-starter-kit-1.3.0",
  "author": {
    "email": "blesh@netflix.com",
    "name": "Ben Lesh"
  },
  "bugs": {
    "url": "https://github.com/ReactiveX/RxJS/issues"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "commit-msg": "node ./node_modules/validate-commit-msg/index.js"
    }
  },
  "contributors": [
    {
      "name": "Ben Lesh",
      "email": "blesh@netflix.com"
    },
    {
      "name": "Paul Taylor",
      "email": "paul.e.taylor@me.com"
    },
    {
      "name": "Jeff Cross",
      "email": "crossj@google.com"
    },
    {
      "name": "Matthew Podwysocki",
      "email": "matthewp@microsoft.com"
    },
    {
      "name": "OJ Kwon",
      "email": "kwon.ohjoong@gmail.com"
    },
    {
      "name": "Andre Staltz",
      "email": "andre@staltz.com"
    }
  ],
  "dependencies": {
    "symbol-observable": "^0.2.4"
  },
  "description": "Reactive Extensions for modern JavaScript",
  "devDependencies": {
    "babel-polyfill": "^6.7.2",
    "benchmark": "^2.1.0",
    "benchpress": "2.0.0-beta.1",
    "browserify": "13.0.0",
    "chai": "^3.5.0",
    "color": "^0.11.1",
    "colors": "1.1.2",
    "commitizen": "^2.7.2",
    "coveralls": "^2.11.8",
    "cz-conventional-changelog": "1.1.5",
    "esdoc": "^0.4.6",
    "eslint": "^2.4.0",
    "fs-extra": "^0.26.5",
    "ghooks": "^1.0.3",
    "glob": "^7.0.3",
    "gm": "1.21.1",
    "google-closure-compiler": "^20160208.5.0",
    "gzip-size": "^3.0.0",
    "http-server": "^0.9.0",
    "istanbul": "0.4.2",
    "lodash": "^4.6.1",
    "madge": "^0.5.3",
    "markdown-doctest": "^0.3.2",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.1",
    "mocha": "^2.4.5",
    "mocha-in-sauce": "0.0.1",
    "npm-run-all": "^1.5.3",
    "npm-scripts-info": "^0.3.4",
    "opn-cli": "^3.1.0",
    "platform": "^1.3.1",
    "promise": "^7.1.1",
    "protractor": "^3.1.1",
    "remap-istanbul": "0.5.1",
    "rx": "latest",
    "sinon": "^2.0.0-pre",
    "sinon-chai": "^2.8.0",
    "source-map-support": "^0.4.0",
    "systemjs": "^0.19.24",
    "systemjs-builder": "^0.10.6",
    "tslint": "^3.5.0",
    "typescript": "^1.8.10",
    "typings": "^0.7.8",
    "validate-commit-msg": "^2.3.1",
    "watch": "^0.17.1",
    "watchify": "3.7.0",
    "webpack": "^1.12.14",
    "xmlhttprequest": "1.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c0829c55a33c0bec30abb41de385e2820bae8dd5",
    "tarball": "https://registry.npmjs.org/@reactivex/rxjs/-/rxjs-5.0.0-beta.7.tgz"
  },
  "engines": {
    "npm": ">=2.0.0"
  },
  "gitHead": "e97a7bdb3827a440b598a77e7f8953eb5dfb8e0e",
  "homepage": "https://github.com/ReactiveX/RxJS",
  "keywords": [
    "ES2015",
    "ES6",
    "Observable",
    "Observables",
    "ReactiveExtensions",
    "ReactiveX",
    "Rx",
    "RxJS",
    "Stream",
    "Streams"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "blesh",
      "email": "ben@benlesh.com"
    },
    {
      "name": "reactivex",
      "email": "blesh@netflix.com"
    }
  ],
  "name": "@reactivex/rxjs",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/ReactiveX/RxJS.git"
  },
  "scripts": {
    "build_all": "npm-run-all build_es6 build_amd build_cjs build_global generate_packages",
    "build_amd": "npm-run-all clean_dist_amd copy_src_amd compile_dist_amd",
    "build_cjs": "npm-run-all clean_dist_cjs copy_src_cjs compile_dist_cjs",
    "build_closure_core": "java -jar ./node_modules/google-closure-compiler/compiler.jar --js ./dist/global/Rx.umd.js --language_in ECMASCRIPT5 --create_source_map ./dist/global/Rx.umd.min.js.map --js_output_file ./dist/global/Rx.umd.min.js",
    "build_closure_kitchensink": "java -jar ./node_modules/google-closure-compiler/compiler.jar --js ./dist/global/Rx.KitchenSink.umd.js --language_in ECMASCRIPT5 --create_source_map ./dist/global/Rx.KitchenSink.umd.min.js.map --js_output_file ./dist/global/Rx.KitchenSink.umd.min.js",
    "build_cover": "rm -rf ./dist/ && npm-run-all lint build_cjs build_spec cover",
    "build_docs": "npm-run-all build_es6_for_docs build_global build_spec tests2png decision_tree_widget && esdoc -c esdoc.json",
    "build_es6": "npm-run-all clean_dist_es6 copy_src_es6 compile_dist_es6",
    "build_es6_for_docs": "npm-run-all clean_dist_es6 copy_src_es6 compile_dist_es6_for_docs",
    "build_global": "rm -rf ./dist/global && mkdirp ./dist/global && node tools/make-umd-bundle.js && node tools/make-system-bundle.js && npm-run-all build_closure_core build_closure_kitchensink",
    "build_perf": "webdriver-manager update && npm-run-all build_cjs build_global perf",
    "build_spec": "tsc --project ./spec --pretty",
    "build_spec_browser": "webpack --config spec/support/webpack.mocha.config.js",
    "build_test": "rm -rf ./dist/ && npm-run-all lint build_cjs clean_spec build_spec test_mocha",
    "check_circular_dependencies": "madge ./dist/cjs --circular",
    "clean_dist_amd": "rm -rf ./dist/amd",
    "clean_dist_cjs": "rm -rf ./dist/cjs",
    "clean_dist_es6": "rm -rf ./dist/es6",
    "clean_spec": "rm -rf spec-js",
    "commit": "git-cz",
    "compile_dist_amd": "tsc typings/main/ambient/es6-shim/index.d.ts ./dist/amd/src/Rx.ts ./dist/amd/src/Rx.KitchenSink.ts ./dist/amd/src/Rx.DOM.ts ./dist/amd/src/add/observable/of.ts                             -m amd      --sourceMap --outDir ./dist/amd --target ES5    --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors --moduleResolution node",
    "compile_dist_cjs": "tsc typings/main/ambient/es6-shim/index.d.ts ./dist/cjs/src/Rx.ts ./dist/cjs/src/Rx.KitchenSink.ts ./dist/cjs/src/Rx.DOM.ts ./dist/cjs/src/add/observable/of.ts                             -m commonjs --sourceMap --outDir ./dist/cjs --target ES5 -d --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors --moduleResolution node",
    "compile_dist_es6": "tsc                                          ./dist/es6/src/Rx.ts ./dist/es6/src/Rx.KitchenSink.ts ./dist/es6/src/Rx.DOM.ts ./dist/es6/src/add/observable/of.ts                             -m es2015   --sourceMap --outDir ./dist/es6 --target ES6 -d --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors --moduleResolution node",
    "compile_dist_es6_for_docs": "tsc                                 ./dist/es6/src/Rx.ts ./dist/es6/src/Rx.KitchenSink.ts ./dist/es6/src/Rx.DOM.ts ./dist/es6/src/add/observable/of.ts ./dist/es6/src/MiscJSDoc.ts -m es2015   --sourceMap --outDir ./dist/es6 --target ES6 -d --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors --moduleResolution node",
    "copy_src_amd": "mkdirp ./dist/amd/src && cp -r ./src/* ./dist/amd/src",
    "copy_src_cjs": "mkdirp ./dist/cjs/src && cp -r ./src/* ./dist/cjs/src",
    "copy_src_es6": "mkdirp ./dist/es6/src && cp -r ./src/* ./dist/es6/src",
    "cover": "npm-run-all cover_test cover_remapping",
    "cover_remapping": "remap-istanbul -i coverage/coverage.json -o coverage/coverage-remapped.json && remap-istanbul -i coverage/coverage.json -o coverage/coverage-remapped.lcov -t lcovonly && remap-istanbul -i coverage/coverage.json -o coverage/coverage-remapped -t html",
    "cover_test": "rm -rf dist/cjs && tsc typings/main/ambient/es6-shim/index.d.ts src/Rx.ts src/Rx.KitchenSink.ts src/Rx.DOM.ts src/add/observable/of.ts -m commonjs --outDir dist/cjs --sourceMap --target ES5 -d && istanbul cover -x \"spec-js/**/*\" -x \"mocha-setup-node.js\" ./node_modules/mocha/bin/_mocha -- --opts spec/support/default.opts spec-js",
    "decision_tree_widget": "cd doc/decision-tree-widget && npm run build && cd ../..",
    "generate_packages": "node .make-packages.js",
    "info": "npm-scripts-info",
    "lint": "npm-run-all lint_src lint_spec lint_perf",
    "lint_perf": "eslint perf/",
    "lint_spec": "tslint -c tslint.json spec/*.ts spec/**/*.ts spec/**/**/*.ts",
    "lint_src": "tslint -c tslint.json src/*.ts src/**/*.ts src/**/**/*.ts",
    "perf": "protractor protractor.conf.js",
    "perf_micro": "node ./perf/micro/index.js",
    "prepublish": "rm -rf ./typings && typings install && npm run build_all",
    "publish_docs": "./publish_docs.sh",
    "test": "npm-run-all clean_spec build_spec test_mocha clean_spec",
    "test_browser": "npm-run-all build_spec_browser && opn spec/support/mocha-browser-runner.html",
    "test_mocha": "mocha --opts spec/support/default.opts spec-js",
    "tests2png": "npm run build_spec && mkdirp tmp/docs/img && mkdirp spec-js/support && cp spec/support/*.opts spec-js/support/ && mocha --opts spec/support/tests2png.opts spec-js",
    "watch": "watch \"echo triggering build && npm run build_test && echo build completed\" src -d -u -w=15"
  },
  "scripts-info": {
    "build_all": "Build all packages(ES6, CJS, AMD, Global) and generate packages",
    "build_amd": "Build AMD package with clean up existing build, copy source into dist",
    "build_cjs": "Build CJS package with clean up existing build, copy source into dist",
    "build_closure_core": "Minify Global core build using closure compiler",
    "build_closure_kitchensink": "Minify Global kitchenSink build using closure compiler",
    "build_cover": "Run lint to current code, build CJS & test spec, execute test coverage",
    "build_docs": "Build ES6 & global package, create documentation using it",
    "build_es6": "Build ES6 package with clean up existing build, copy source into dist",
    "build_global": "Build Global package, then minify core & kitchensink build",
    "build_perf": "Build CJS & Global build, run macro performance test",
    "build_spec": "Build test specs",
    "build_test": "Build CJS package & test spec, execute mocha test runner",
    "check_circular_dependencies": "Check codebase has circular dependencies",
    "clean_dist_amd": "Clean up existing AMD package output",
    "clean_dist_cjs": "Clean up existing CJS package output",
    "clean_dist_es6": "Clean up existing ES6 package output",
    "clean_spec": "Clean up existing test spec build output",
    "commit": "Run git commit wizard",
    "compile_dist_amd": "Compile codebase into AMD module",
    "compile_dist_cjs": "Compile codebase into CJS module",
    "compile_dist_es6": "Compile codebase into ES6",
    "cover": "Execute test coverage",
    "info": "List available script",
    "lint": "Run lint against everything",
    "lint_perf": "Run lint against performance test suite",
    "lint_spec": "Run lint against test spec",
    "lint_src": "Run lint against source",
    "perf": "Run macro performance benchmark",
    "perf_micro": "Run micro performance benchmark",
    "test": "Clean up existing test spec build, build test spec and execute mocha test runner",
    "test_browser": "Execute mocha test runner on browser against existing test spec build",
    "test_mocha": "Execute mocha test runner against existing test spec build",
    "tests2png": "Generate marble diagram image from test spec",
    "watch": "Watch codebase, trigger compile when source code changes"
  },
  "typings": "./dist/cjs/Rx.d.ts",
  "version": "5.0.0-beta.7"
}
