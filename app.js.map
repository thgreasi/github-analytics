{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["import { app, loadedPromise } from './appCore';\nimport './appSW';\nimport { init as appThemeInit } from './appTheme';\nimport { GithubService } from './appConfig';\n\nimport localforage from 'localforage';\nimport RepositoryDetails from './Model/RepositoryDetails';\n\n\nappThemeInit();\n\napp.repos = [];\n\n\n// Scroll page to top and expand header\napp.scrollPageToTop = function() {\n  app.$.headerPanelMain.scrollToTop(true);\n};\n\napp.closeDrawer = function() {\n  app.$.paperDrawerPanel.closeDrawer();\n};\n\napp.reloadPage = function() {\n  if (app.crntPageElement && typeof app.crntPageElement.refresh === 'function') {\n    app.crntPageElement.refresh();\n  }\n};\n\napp.dataItemsLoaded = false;\nvar reposOnLoadPromise = localforage.getItem('data.repos').then(repos => {\n    if (!Array.isArray(repos)) {\n      repos = [];\n    }\n\n    repos = repos.map(repo => Object.assign(new RepositoryDetails(), repo));\n\n    console.log('LOADED!', repos);\n    return repos;\n}).catch(() => []);\n\nloadedPromise.then(() => {\n  console.log('loadedPromise');\n  return reposOnLoadPromise.then(repos => {\n    // app.$.dataReposStorage.set('autoSaveDisabled', false);\n    app.set('dataItemsLoaded', true);\n    app.set('repos', repos);\n    console.log('SET repos', repos);\n\n    if (repos && repos.length) {\n      setTimeout(() => {\n        app.page.show('/repositories');\n        app.reloadPage();\n      }, 0);\n    }\n  });\n\n  // return getUserAndOrgRepos('thgreasi');\n\n});\n\nfunction getUserAndOrgRepos(username) {\n  var userReposPromise = GithubService.getUserRepos(username);\n  var orgsPromise = GithubService.getUserOrgs(username);\n\n  var overallPromises = [processRepoInfosPromise(userReposPromise)];\n\n  overallPromises.push(orgsPromise.then(orgs => {\n    return Promise.all(orgs.map(o => processRepoInfosPromise(GithubService.getUserRepos(o.login))));\n  }));\n\n  return Promise.all([overallPromises]);\n}\n\n\nfunction processRepoInfos (repos) {\n  repos.forEach((repo) => {\n    repo.setStargazers(repo.stargazers_count);\n    repo.setDownloads(repo.downloads);\n  });\n  \n  if (repos.length) {\n    app.repos.push.apply(app.repos, repos);\n    app.set('repos', app.repos.slice());\n  }\n\n  // let args = repos.slice();\n  // args.unshift('app.repos');\n  // console.log(args);\n  // app.push.apply(app, args);\n}\n\nfunction processRepoInfosPromise (reposPromise) {\n  return reposPromise.then(repos => processRepoInfos(repos));\n}\n"],"file":"app.js","sourceRoot":"/source/"}